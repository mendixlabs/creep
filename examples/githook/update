#!/usr/bin/python
import socket
import commands
import httplib2
import json
import sys
import re

url = 'https://creep.example.com/'
password = 'my_hyper_secure_password'
room = 'room@conference.example.com'

headers = {
    'Content-Type': 'application/json',
    'Creep-Authentication': password,
}

# input validation
if len(sys.argv) != 4:
    print "Not enough arguments passed: %s ref old new" % sys.argv[0]
    exit(1)

(ref, old, new) = sys.argv[1:4]

if not re.match(r'^([_/a-zA-Z0-9]+)?$', ref):
    print "Invalid ref: %s" % ref
    exit(1)

if not re.match(r'^\w+$', old):
    print "Invalid old: %s" % old
    exit(1)

if not re.match(r'^\w+$', new):
    print "Invalid new: %s" % new
    exit(1)

if old == '0000000000000000000000000000000000000000':
    heads = commands.getoutput("git for-each-ref --format='%(refname)' 'refs/heads/*'")
    heads = heads.replace('\n',' ')
    heads = re.sub(r'^/', '^', heads)
    command = "git log --pretty=format:'[%%h] by %%ae - %%s%%n%%b' --stat %s --not %s" % (new, heads)
else:
    command = "git log %s..%s --pretty=format:'[%%h] by %%ae - %%s%%n%%b' --stat %s" % (old, new, ref)

try:
    message = commands.getoutput(command)
    body = {"message": message, "room": room}
    socket.setdefaulttimeout(2)
    h = httplib2.Http()
    h.request(url, "POST", json.dumps(body), headers=headers)

except Exception, ex:
    try:
        text = 'creephook for git: Exception while parsing'
        body = {"message": text, "room": room}
        h = httplib2.Http()
        h.request(url, "POST", json.dumps(body), headers=headers)

    except Exception, v:
        print v
